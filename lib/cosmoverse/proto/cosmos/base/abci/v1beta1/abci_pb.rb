# frozen_string_literal: true

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/base/abci/v1beta1/abci.proto

require 'google/protobuf'

require 'cosmoverse/proto/gogoproto/gogo_pb'
require 'cosmoverse/proto/tendermint/abci/types_pb'
require 'cosmoverse/proto/tendermint/types/block_pb'
require 'google/protobuf/any_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("cosmos/base/abci/v1beta1/abci.proto", :syntax => :proto3) do
    add_message "cosmos.base.abci.v1beta1.TxResponse" do
      optional :height, :int64, 1, json_name: "height"
      optional :txhash, :string, 2, json_name: "txhash"
      optional :codespace, :string, 3, json_name: "codespace"
      optional :code, :uint32, 4, json_name: "code"
      optional :data, :string, 5, json_name: "data"
      optional :raw_log, :string, 6, json_name: "rawLog"
      repeated :logs, :message, 7, "cosmos.base.abci.v1beta1.ABCIMessageLog", json_name: "logs"
      optional :info, :string, 8, json_name: "info"
      optional :gas_wanted, :int64, 9, json_name: "gasWanted"
      optional :gas_used, :int64, 10, json_name: "gasUsed"
      optional :tx, :message, 11, "google.protobuf.Any", json_name: "tx"
      optional :timestamp, :string, 12, json_name: "timestamp"
      repeated :events, :message, 13, "tendermint.abci.Event", json_name: "events"
    end
    add_message "cosmos.base.abci.v1beta1.ABCIMessageLog" do
      optional :msg_index, :uint32, 1, json_name: "msgIndex"
      optional :log, :string, 2, json_name: "log"
      repeated :events, :message, 3, "cosmos.base.abci.v1beta1.StringEvent", json_name: "events"
    end
    add_message "cosmos.base.abci.v1beta1.StringEvent" do
      optional :type, :string, 1, json_name: "type"
      repeated :attributes, :message, 2, "cosmos.base.abci.v1beta1.Attribute", json_name: "attributes"
    end
    add_message "cosmos.base.abci.v1beta1.Attribute" do
      optional :key, :string, 1, json_name: "key"
      optional :value, :string, 2, json_name: "value"
    end
    add_message "cosmos.base.abci.v1beta1.GasInfo" do
      optional :gas_wanted, :uint64, 1, json_name: "gasWanted"
      optional :gas_used, :uint64, 2, json_name: "gasUsed"
    end
    add_message "cosmos.base.abci.v1beta1.Result" do
      optional :data, :bytes, 1, json_name: "data"
      optional :log, :string, 2, json_name: "log"
      repeated :events, :message, 3, "tendermint.abci.Event", json_name: "events"
      repeated :msg_responses, :message, 4, "google.protobuf.Any", json_name: "msgResponses"
    end
    add_message "cosmos.base.abci.v1beta1.SimulationResponse" do
      optional :gas_info, :message, 1, "cosmos.base.abci.v1beta1.GasInfo", json_name: "gasInfo"
      optional :result, :message, 2, "cosmos.base.abci.v1beta1.Result", json_name: "result"
    end
    add_message "cosmos.base.abci.v1beta1.MsgData" do
      optional :msg_type, :string, 1, json_name: "msgType"
      optional :data, :bytes, 2, json_name: "data"
    end
    add_message "cosmos.base.abci.v1beta1.TxMsgData" do
      repeated :data, :message, 1, "cosmos.base.abci.v1beta1.MsgData", json_name: "data"
      repeated :msg_responses, :message, 2, "google.protobuf.Any", json_name: "msgResponses"
    end
    add_message "cosmos.base.abci.v1beta1.SearchTxsResult" do
      optional :total_count, :uint64, 1, json_name: "totalCount"
      optional :count, :uint64, 2, json_name: "count"
      optional :page_number, :uint64, 3, json_name: "pageNumber"
      optional :page_total, :uint64, 4, json_name: "pageTotal"
      optional :limit, :uint64, 5, json_name: "limit"
      repeated :txs, :message, 6, "cosmos.base.abci.v1beta1.TxResponse", json_name: "txs"
    end
    add_message "cosmos.base.abci.v1beta1.SearchBlocksResult" do
      optional :total_count, :int64, 1, json_name: "totalCount"
      optional :count, :int64, 2, json_name: "count"
      optional :page_number, :int64, 3, json_name: "pageNumber"
      optional :page_total, :int64, 4, json_name: "pageTotal"
      optional :limit, :int64, 5, json_name: "limit"
      repeated :blocks, :message, 6, "tendermint.types.Block", json_name: "blocks"
    end
  end
end

module Cosmoverse
  module Proto
    module Cosmos
      module Base
        module Abci
          module V1beta1
            module Abci
              TxResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.TxResponse").msgclass
              ABCIMessageLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.ABCIMessageLog").msgclass
              StringEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.StringEvent").msgclass
              Attribute = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.Attribute").msgclass
              GasInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.GasInfo").msgclass
              Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.Result").msgclass
              SimulationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.SimulationResponse").msgclass
              MsgData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.MsgData").msgclass
              TxMsgData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.TxMsgData").msgclass
              SearchTxsResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.SearchTxsResult").msgclass
              SearchBlocksResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.base.abci.v1beta1.SearchBlocksResult").msgclass
            end
          end
        end
      end
    end
  end
end
