# frozen_string_literal: true

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tendermint/abci/types.proto

require "google/protobuf"

require "tendermint/crypto/proof_pb"
require "tendermint/types/types_pb"
require "tendermint/crypto/keys_pb"
require "tendermint/types/params_pb"
require "google/protobuf/timestamp_pb"

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("tendermint/abci/types.proto", syntax: :proto3) do
    add_message "cosmoverse.proto.tendermint.abci.Request" do
      oneof :value do
        optional :echo, :message, 1, "cosmoverse.proto.tendermint.abci.RequestEcho"
        optional :flush, :message, 2, "cosmoverse.proto.tendermint.abci.RequestFlush"
        optional :info, :message, 3, "cosmoverse.proto.tendermint.abci.RequestInfo"
        optional :set_option, :message, 4, "cosmoverse.proto.tendermint.abci.RequestSetOption"
        optional :init_chain, :message, 5, "cosmoverse.proto.tendermint.abci.RequestInitChain"
        optional :query, :message, 6, "cosmoverse.proto.tendermint.abci.RequestQuery"
        optional :begin_block, :message, 7, "cosmoverse.proto.tendermint.abci.RequestBeginBlock"
        optional :check_tx, :message, 8, "cosmoverse.proto.tendermint.abci.RequestCheckTx"
        optional :deliver_tx, :message, 9, "cosmoverse.proto.tendermint.abci.RequestDeliverTx"
        optional :end_block, :message, 10, "cosmoverse.proto.tendermint.abci.RequestEndBlock"
        optional :commit, :message, 11, "cosmoverse.proto.tendermint.abci.RequestCommit"
        optional :list_snapshots, :message, 12, "cosmoverse.proto.tendermint.abci.RequestListSnapshots"
        optional :offer_snapshot, :message, 13, "cosmoverse.proto.tendermint.abci.RequestOfferSnapshot"
        optional :load_snapshot_chunk, :message, 14, "cosmoverse.proto.tendermint.abci.RequestLoadSnapshotChunk"
        optional :apply_snapshot_chunk, :message, 15, "cosmoverse.proto.tendermint.abci.RequestApplySnapshotChunk"
      end
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestEcho" do
      optional :message, :string, 1
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestFlush" do
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestInfo" do
      optional :version, :string, 1
      optional :block_version, :uint64, 2
      optional :p2p_version, :uint64, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestSetOption" do
      optional :key, :string, 1
      optional :value, :string, 2
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestInitChain" do
      optional :time, :message, 1, "google.protobuf.Timestamp"
      optional :chain_id, :string, 2
      optional :consensus_params, :message, 3, "cosmoverse.proto.tendermint.abci.ConsensusParams"
      repeated :validators, :message, 4, "cosmoverse.proto.tendermint.abci.ValidatorUpdate"
      optional :app_state_bytes, :bytes, 5
      optional :initial_height, :int64, 6
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestQuery" do
      optional :data, :bytes, 1
      optional :path, :string, 2
      optional :height, :int64, 3
      optional :prove, :bool, 4
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestBeginBlock" do
      optional :hash, :bytes, 1
      optional :header, :message, 2, "cosmoverse.proto.tendermint.types.Header"
      optional :last_commit_info, :message, 3, "cosmoverse.proto.tendermint.abci.LastCommitInfo"
      repeated :byzantine_validators, :message, 4, "cosmoverse.proto.tendermint.abci.Evidence"
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestCheckTx" do
      optional :tx, :bytes, 1
      optional :type, :enum, 2, "cosmoverse.proto.tendermint.abci.CheckTxType"
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestDeliverTx" do
      optional :tx, :bytes, 1
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestEndBlock" do
      optional :height, :int64, 1
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestCommit" do
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestListSnapshots" do
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestOfferSnapshot" do
      optional :snapshot, :message, 1, "cosmoverse.proto.tendermint.abci.Snapshot"
      optional :app_hash, :bytes, 2
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestLoadSnapshotChunk" do
      optional :height, :uint64, 1
      optional :format, :uint32, 2
      optional :chunk, :uint32, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.RequestApplySnapshotChunk" do
      optional :index, :uint32, 1
      optional :chunk, :bytes, 2
      optional :sender, :string, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.Response" do
      oneof :value do
        optional :exception, :message, 1, "cosmoverse.proto.tendermint.abci.ResponseException"
        optional :echo, :message, 2, "cosmoverse.proto.tendermint.abci.ResponseEcho"
        optional :flush, :message, 3, "cosmoverse.proto.tendermint.abci.ResponseFlush"
        optional :info, :message, 4, "cosmoverse.proto.tendermint.abci.ResponseInfo"
        optional :set_option, :message, 5, "cosmoverse.proto.tendermint.abci.ResponseSetOption"
        optional :init_chain, :message, 6, "cosmoverse.proto.tendermint.abci.ResponseInitChain"
        optional :query, :message, 7, "cosmoverse.proto.tendermint.abci.ResponseQuery"
        optional :begin_block, :message, 8, "cosmoverse.proto.tendermint.abci.ResponseBeginBlock"
        optional :check_tx, :message, 9, "cosmoverse.proto.tendermint.abci.ResponseCheckTx"
        optional :deliver_tx, :message, 10, "cosmoverse.proto.tendermint.abci.ResponseDeliverTx"
        optional :end_block, :message, 11, "cosmoverse.proto.tendermint.abci.ResponseEndBlock"
        optional :commit, :message, 12, "cosmoverse.proto.tendermint.abci.ResponseCommit"
        optional :list_snapshots, :message, 13, "cosmoverse.proto.tendermint.abci.ResponseListSnapshots"
        optional :offer_snapshot, :message, 14, "cosmoverse.proto.tendermint.abci.ResponseOfferSnapshot"
        optional :load_snapshot_chunk, :message, 15, "cosmoverse.proto.tendermint.abci.ResponseLoadSnapshotChunk"
        optional :apply_snapshot_chunk, :message, 16, "cosmoverse.proto.tendermint.abci.ResponseApplySnapshotChunk"
      end
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseException" do
      optional :error, :string, 1
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseEcho" do
      optional :message, :string, 1
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseFlush" do
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseInfo" do
      optional :data, :string, 1
      optional :version, :string, 2
      optional :app_version, :uint64, 3
      optional :last_block_height, :int64, 4
      optional :last_block_app_hash, :bytes, 5
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseSetOption" do
      optional :code, :uint32, 1
      optional :log, :string, 3
      optional :info, :string, 4
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseInitChain" do
      optional :consensus_params, :message, 1, "cosmoverse.proto.tendermint.abci.ConsensusParams"
      repeated :validators, :message, 2, "cosmoverse.proto.tendermint.abci.ValidatorUpdate"
      optional :app_hash, :bytes, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseQuery" do
      optional :code, :uint32, 1
      optional :log, :string, 3
      optional :info, :string, 4
      optional :index, :int64, 5
      optional :key, :bytes, 6
      optional :value, :bytes, 7
      optional :proof_ops, :message, 8, "cosmoverse.proto.tendermint.crypto.ProofOps"
      optional :height, :int64, 9
      optional :codespace, :string, 10
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseBeginBlock" do
      repeated :events, :message, 1, "cosmoverse.proto.tendermint.abci.Event"
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseCheckTx" do
      optional :code, :uint32, 1
      optional :data, :bytes, 2
      optional :log, :string, 3
      optional :info, :string, 4
      optional :gas_wanted, :int64, 5, json_name: "gas_wanted"
      optional :gas_used, :int64, 6, json_name: "gas_used"
      repeated :events, :message, 7, "cosmoverse.proto.tendermint.abci.Event"
      optional :codespace, :string, 8
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseDeliverTx" do
      optional :code, :uint32, 1
      optional :data, :bytes, 2
      optional :log, :string, 3
      optional :info, :string, 4
      optional :gas_wanted, :int64, 5, json_name: "gas_wanted"
      optional :gas_used, :int64, 6, json_name: "gas_used"
      repeated :events, :message, 7, "cosmoverse.proto.tendermint.abci.Event"
      optional :codespace, :string, 8
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseEndBlock" do
      repeated :validator_updates, :message, 1, "cosmoverse.proto.tendermint.abci.ValidatorUpdate"
      optional :consensus_param_updates, :message, 2, "cosmoverse.proto.tendermint.abci.ConsensusParams"
      repeated :events, :message, 3, "cosmoverse.proto.tendermint.abci.Event"
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseCommit" do
      optional :data, :bytes, 2
      optional :retain_height, :int64, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseListSnapshots" do
      repeated :snapshots, :message, 1, "cosmoverse.proto.tendermint.abci.Snapshot"
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseOfferSnapshot" do
      optional :result, :enum, 1, "cosmoverse.proto.tendermint.abci.ResponseOfferSnapshot.Result"
    end
    add_enum "cosmoverse.proto.tendermint.abci.ResponseOfferSnapshot.Result" do
      value :UNKNOWN, 0
      value :ACCEPT, 1
      value :ABORT, 2
      value :REJECT, 3
      value :REJECT_FORMAT, 4
      value :REJECT_SENDER, 5
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseLoadSnapshotChunk" do
      optional :chunk, :bytes, 1
    end
    add_message "cosmoverse.proto.tendermint.abci.ResponseApplySnapshotChunk" do
      optional :result, :enum, 1, "cosmoverse.proto.tendermint.abci.ResponseApplySnapshotChunk.Result"
      repeated :refetch_chunks, :uint32, 2
      repeated :reject_senders, :string, 3
    end
    add_enum "cosmoverse.proto.tendermint.abci.ResponseApplySnapshotChunk.Result" do
      value :UNKNOWN, 0
      value :ACCEPT, 1
      value :ABORT, 2
      value :RETRY, 3
      value :RETRY_SNAPSHOT, 4
      value :REJECT_SNAPSHOT, 5
    end
    add_message "cosmoverse.proto.tendermint.abci.ConsensusParams" do
      optional :block, :message, 1, "cosmoverse.proto.tendermint.abci.BlockParams"
      optional :evidence, :message, 2, "cosmoverse.proto.tendermint.types.EvidenceParams"
      optional :validator, :message, 3, "cosmoverse.proto.tendermint.types.ValidatorParams"
      optional :version, :message, 4, "cosmoverse.proto.tendermint.types.VersionParams"
    end
    add_message "cosmoverse.proto.tendermint.abci.BlockParams" do
      optional :max_bytes, :int64, 1
      optional :max_gas, :int64, 2
    end
    add_message "cosmoverse.proto.tendermint.abci.LastCommitInfo" do
      optional :round, :int32, 1
      repeated :votes, :message, 2, "cosmoverse.proto.tendermint.abci.VoteInfo"
    end
    add_message "cosmoverse.proto.tendermint.abci.Event" do
      optional :type, :string, 1
      repeated :attributes, :message, 2, "cosmoverse.proto.tendermint.abci.EventAttribute"
    end
    add_message "cosmoverse.proto.tendermint.abci.EventAttribute" do
      optional :key, :bytes, 1
      optional :value, :bytes, 2
      optional :index, :bool, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.TxResult" do
      optional :height, :int64, 1
      optional :index, :uint32, 2
      optional :tx, :bytes, 3
      optional :result, :message, 4, "cosmoverse.proto.tendermint.abci.ResponseDeliverTx"
    end
    add_message "cosmoverse.proto.tendermint.abci.Validator" do
      optional :address, :bytes, 1
      optional :power, :int64, 3
    end
    add_message "cosmoverse.proto.tendermint.abci.ValidatorUpdate" do
      optional :pub_key, :message, 1, "cosmoverse.proto.tendermint.crypto.PublicKey"
      optional :power, :int64, 2
    end
    add_message "cosmoverse.proto.tendermint.abci.VoteInfo" do
      optional :validator, :message, 1, "cosmoverse.proto.tendermint.abci.Validator"
      optional :signed_last_block, :bool, 2
    end
    add_message "cosmoverse.proto.tendermint.abci.Evidence" do
      optional :type, :enum, 1, "cosmoverse.proto.tendermint.abci.EvidenceType"
      optional :validator, :message, 2, "cosmoverse.proto.tendermint.abci.Validator"
      optional :height, :int64, 3
      optional :time, :message, 4, "google.protobuf.Timestamp"
      optional :total_voting_power, :int64, 5
    end
    add_message "cosmoverse.proto.tendermint.abci.Snapshot" do
      optional :height, :uint64, 1
      optional :format, :uint32, 2
      optional :chunks, :uint32, 3
      optional :hash, :bytes, 4
      optional :metadata, :bytes, 5
    end
    add_enum "cosmoverse.proto.tendermint.abci.CheckTxType" do
      value :NEW, 0
      value :RECHECK, 1
    end
    add_enum "cosmoverse.proto.tendermint.abci.EvidenceType" do
      value :UNKNOWN, 0
      value :DUPLICATE_VOTE, 1
      value :LIGHT_CLIENT_ATTACK, 2
    end
  end
end

module Cosmoverse
  module Proto
    module Tendermint
      module Abci
        Request = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.Request").msgclass
        RequestEcho = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestEcho").msgclass
        RequestFlush = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestFlush").msgclass
        RequestInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestInfo").msgclass
        RequestSetOption = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestSetOption").msgclass
        RequestInitChain = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestInitChain").msgclass
        RequestQuery = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestQuery").msgclass
        RequestBeginBlock = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestBeginBlock").msgclass
        RequestCheckTx = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestCheckTx").msgclass
        RequestDeliverTx = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestDeliverTx").msgclass
        RequestEndBlock = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestEndBlock").msgclass
        RequestCommit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestCommit").msgclass
        RequestListSnapshots = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestListSnapshots").msgclass
        RequestOfferSnapshot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestOfferSnapshot").msgclass
        RequestLoadSnapshotChunk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestLoadSnapshotChunk").msgclass
        RequestApplySnapshotChunk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.RequestApplySnapshotChunk").msgclass
        Response = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.Response").msgclass
        ResponseException = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseException").msgclass
        ResponseEcho = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseEcho").msgclass
        ResponseFlush = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseFlush").msgclass
        ResponseInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseInfo").msgclass
        ResponseSetOption = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseSetOption").msgclass
        ResponseInitChain = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseInitChain").msgclass
        ResponseQuery = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseQuery").msgclass
        ResponseBeginBlock = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseBeginBlock").msgclass
        ResponseCheckTx = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseCheckTx").msgclass
        ResponseDeliverTx = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseDeliverTx").msgclass
        ResponseEndBlock = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseEndBlock").msgclass
        ResponseCommit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseCommit").msgclass
        ResponseListSnapshots = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseListSnapshots").msgclass
        ResponseOfferSnapshot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseOfferSnapshot").msgclass
        ResponseOfferSnapshot::Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseOfferSnapshot.Result").enummodule
        ResponseLoadSnapshotChunk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseLoadSnapshotChunk").msgclass
        ResponseApplySnapshotChunk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseApplySnapshotChunk").msgclass
        ResponseApplySnapshotChunk::Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ResponseApplySnapshotChunk.Result").enummodule
        ConsensusParams = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ConsensusParams").msgclass
        BlockParams = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.BlockParams").msgclass
        LastCommitInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.LastCommitInfo").msgclass
        Event = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.Event").msgclass
        EventAttribute = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.EventAttribute").msgclass
        TxResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.TxResult").msgclass
        Validator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.Validator").msgclass
        ValidatorUpdate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.ValidatorUpdate").msgclass
        VoteInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.VoteInfo").msgclass
        Evidence = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.Evidence").msgclass
        Snapshot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.Snapshot").msgclass
        CheckTxType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.CheckTxType").enummodule
        EvidenceType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmoverse.proto.tendermint.abci.EvidenceType").enummodule
      end
    end
  end
end
